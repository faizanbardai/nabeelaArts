{"version":3,"sources":["serviceWorker.js","Components/Home/Artist.jsx","Services/index.js","Components/Home/GallerySection.jsx","Components/Home/Home.jsx","Components/Admin/SignIn.jsx","Components/Admin/AddUpdateArt.jsx","Components/Admin/AdminPanel.jsx","Components/Admin/Admin.jsx","Components/Header.jsx","Components/Main.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Artist","baseURL","process","api_login","body","a","fetch","method","headers","JSON","stringify","api_refresh_token","token","Authorization","api_loadAllArt","api_loadActiveArt","api_updateImage","api_add_art","art","api_update_art","id","api_delete_art","GallerySection","useState","images","setImages","useEffect","then","x","json","className","style","display","width","overflow","Home","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","SignIn","props","classes","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","username","response","status","localStorage","setItem","setIsLoggedIn","removeItem","console","log","Container","component","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","TextField","required","fullWidth","label","name","value","onChange","target","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Button","Box","mt","NewOrUpdateArt","show","setShow","_id","set_id","loading","setLoading","caption","setCaption","picture","setPicture","thumbnailWidth","setThumbnailWidth","thumbnailHeight","setThumbnailHeight","confirmDelete","setConfirmDelete","previewImage","setPreviewImage","handleClose","handleShow","event","getItem","updatedArt","updateArt","data","FormData","append","responseImage","newArtImage","src","medium","url","image","thumbnail","thumb","newArt","addNewArt","clearInputs","onClick","icon","faPen","size","Modal","onHide","centered","Header","closeButton","Title","Body","height","verticalAlign","alt","maxHeight","Form","Group","Control","accept","files","URL","createObjectURL","disabled","placeholder","artDeleted","removeArt","AdminPanel","galleryFromDB","setGalleryFromDB","gallery","setGallery","searchKeyword","setSearchKeyword","newGallery","map","filter","length","toLowerCase","includes","scope","index","key","class","Admin","isLoggedIn","checkTokenStatus","newToken","alert","root","flexGrow","menuButton","marginRight","title","withRouter","nextPath","path","history","push","AppBar","position","Toolbar","Main","basename","exact","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5ee3f6e2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\n\r\nexport default function Artist() {\r\n    return (\r\n        <div>\r\n            {/* Artist */}\r\n        </div>\r\n    )\r\n}\r\n","const baseURL = process.env.REACT_APP_BASE_URL;\r\nexport const api_login = async (body) => {\r\n  return await fetch(baseURL + \"/admin/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\nexport const api_refresh_token = async (token) => {\r\n  return await fetch(baseURL + \"/admin/refresh-token\", {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n  });\r\n};\r\nexport const api_loadAllArt = async () => {\r\n  return await fetch(baseURL + \"/art\");\r\n};\r\nexport const api_loadActiveArt = async () => {\r\n  return await fetch(baseURL + \"/art?active=1\");\r\n};\r\nexport const api_updateImage = async (body) => {\r\n  return await fetch(\"https://api.imgbb.com/1/upload\", {\r\n    method: \"POST\",\r\n    body: body,\r\n  });\r\n};\r\nexport const api_add_art = async (art, token) => {\r\n  return await fetch(baseURL + \"/art\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify(art),\r\n  });\r\n};\r\nexport const api_update_art = async (id, body, token) => {\r\n  return await fetch(baseURL + \"/art/\" + id, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n};\r\nexport const api_delete_art = async (id, token) => {\r\n  return await fetch(baseURL + \"/art/\" + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    },\r\n  });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Gallery from \"react-grid-gallery\";\r\nimport { api_loadActiveArt } from \"../../Services\";\r\n\r\nexport default function GallerySection() {\r\n    const [images, setImages] = useState([]);\r\n    useEffect(() => {\r\n        api_loadActiveArt()\r\n      .then((x) => x.json())\r\n      .then((x) => {\r\n        setImages(x)\r\n      });\r\n      }, []);\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        display: \"block\",\r\n        width: \"100%\",\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Gallery\r\n        images={images}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Artist from \"./Artist\";\r\n\r\nimport GallerySection from \"./GallerySection\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Artist />\r\n      <GallerySection />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\n// import Grid from '@material-ui/core/Grid';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useState } from \"react\";\r\nimport { api_login } from \"../../Services\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await api_login({ username: email, password });\r\n    switch (response.status) {\r\n      case 200:\r\n        // OK\r\n        const token = await response.json();\r\n        localStorage.setItem(\"token\", token.token);\r\n        props.setIsLoggedIn(true);\r\n        break;\r\n      case 401:\r\n        // unauthorized\r\n        localStorage.removeItem(\"token\");\r\n        break;\r\n      default:\r\n        console.log(\"Some error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport { api_updateImage, api_add_art, api_update_art, api_delete_art } from \"../../Services\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function NewOrUpdateArt(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [_id, set_id] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [picture, setPicture] = useState(null);\r\n  const [thumbnailWidth, setThumbnailWidth] = useState(\"\");\r\n  const [thumbnailHeight, setThumbnailHeight] = useState(\"\");\r\n  const [confirmDelete, setConfirmDelete] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(null);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    if (props.art) {\r\n      const updatedArt = await api_update_art(\r\n        props.art._id,\r\n        { caption, thumbnailWidth, thumbnailHeight },\r\n        localStorage.getItem(\"token\")\r\n      ).then((x) => x.json());\r\n      props.updateArt(updatedArt);\r\n      handleClose();\r\n      setLoading(false);\r\n    } else {\r\n      const data = new FormData();\r\n      data.append(\"key\", \"c2a389ce6f580be4c419e46023526cce\");\r\n      data.append(\"image\", picture);\r\n      const responseImage = await api_updateImage(data);\r\n      const newArtImage = await responseImage.json();\r\n      const response = await api_add_art(\r\n        {\r\n          src: newArtImage.data.medium\r\n            ? newArtImage.data.medium.url\r\n            : newArtImage.data.image.url,\r\n          thumbnail: newArtImage.data.thumb.url,\r\n          thumbnailWidth,\r\n          thumbnailHeight,\r\n          caption,\r\n        },\r\n        localStorage.getItem(\"token\")\r\n      );\r\n      const newArt = await response.json();\r\n      props.addNewArt(newArt);\r\n      clearInputs();\r\n      handleClose();\r\n      setLoading(false);\r\n    }\r\n  };\r\n  // Clear inputs\r\n  const clearInputs = () => {\r\n    set_id();\r\n    setCaption(\"\");\r\n    setThumbnailWidth(\"\");\r\n    setThumbnailHeight(\"\");\r\n    setPicture(null);\r\n    setPreviewImage(null);\r\n  };\r\n  useEffect(() => {\r\n    if (props.art) {\r\n      set_id(props.art._id);\r\n      setCaption(props.art.caption);\r\n      setThumbnailHeight(props.art.thumbnailHeight);\r\n      setThumbnailWidth(props.art.thumbnailWidth);\r\n      setPreviewImage(props.art.src);\r\n    }\r\n  }, [props.art]);\r\n\r\n  return (\r\n    <>\r\n      {!props.art && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-sm rounded-pill mx-2\"\r\n          onClick={handleShow}\r\n        >\r\n          Add new\r\n        </button>\r\n      )}\r\n      {props.art && (\r\n        <FontAwesomeIcon icon={faPen} size={\"xs\"} onClick={handleShow} />\r\n      )}\r\n\r\n      <Modal size=\"xl\" show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.art ? caption : \"New Art\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"row\">\r\n            {previewImage && (\r\n              <div className=\"col-12 col-md-6 d-flex justify-content-center\">\r\n                <div\r\n                  style={{\r\n                    display: \"table-cell\",\r\n                    width: \"300px\",\r\n                    height: \"300px\",\r\n                    verticalAlign: \"middle\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    alt=\"art\"\r\n                    style={{\r\n                      maxWidth: \"100%\",\r\n                      maxHeight: \"100%\",\r\n                      display: \"block\",\r\n                      margin: \"0 auto\",\r\n                    }}\r\n                    // src=\"https://picsum.photos/2000\"\r\n                    src={previewImage}\r\n                  ></img>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className={previewImage ? \"col-12 col-md-6\" : \"col-12\"}>\r\n              <Form onSubmit={handleSubmit}>\r\n                {!props.art && (\r\n                  <Form.Group>\r\n                    <Form.Control\r\n                      type=\"file\"\r\n                      required={!props.art}\r\n                      name=\"picture\"\r\n                      accept=\"image/*\"\r\n                      onChange={(e) => {\r\n                        setPicture(e.target.files[0]);\r\n                        setPreviewImage(URL.createObjectURL(e.target.files[0]));\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                )}\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={caption}\r\n                    name=\"title\"\r\n                    disabled={loading}\r\n                    required\r\n                    onChange={(e) => setCaption(e.target.value)}\r\n                    placeholder=\"Title\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={thumbnailHeight}\r\n                    name=\"thumbnailHeight\"\r\n                    required\r\n                    disabled={loading}\r\n                    onChange={(e) => setThumbnailHeight(e.target.value)}\r\n                    placeholder=\"Height\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={thumbnailWidth}\r\n                    name=\"thumbnailWidth\"\r\n                    required\r\n                    disabled={loading}\r\n                    onChange={(e) => setThumbnailWidth(e.target.value)}\r\n                    placeholder=\"Width\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <div className=\"d-flex justify-content-between\">\r\n                  {props.art &&\r\n                    (confirmDelete ? (\r\n                      <button\r\n                      type=\"button\"\r\n                        onClick={() => {\r\n                          const artDeleted = api_delete_art(_id, localStorage.getItem(\"token\")).then(x=>x.json());\r\n                          props.removeArt(artDeleted);\r\n                          handleClose();\r\n                        }}\r\n                        className=\"btn btn-outline-danger\"\r\n                      >\r\n                        Sure?\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                      type=\"button\"\r\n                        onClick={() => setConfirmDelete(true)}\r\n                        className=\"btn btn-outline-danger\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    ))}\r\n                  {!loading ? (\r\n                    <>\r\n                      {props.art && (\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                          Update\r\n                        </button>\r\n                      )}\r\n                      {!props.art && (\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                          Save\r\n                        </button>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    <button variant=\"btn btn-secondary\" disabled>\r\n                      <div className=\"d-flex\">\r\n                        <Loader\r\n                          type=\"Puff\"\r\n                          color=\"blue\"\r\n                          height={10}\r\n                          width={10}\r\n                        />\r\n                        <div>-- Loading</div>\r\n                      </div>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AddUpdateArt from \"./AddUpdateArt\";\r\nimport { api_loadAllArt } from \"../../Services\";\r\n\r\nexport default function AdminPanel(props) {\r\n  const [galleryFromDB, setGalleryFromDB] = useState([]);\r\n  const [gallery, setGallery] = useState([]);\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  useEffect(() => {\r\n    api_loadAllArt()\r\n      .then((x) => x.json())\r\n      .then((x) => {\r\n        setGalleryFromDB(x);\r\n        setGallery(x);\r\n      });\r\n  }, []);\r\n  const addNewArt = (newArt) => {\r\n    setSearchKeyword(\"\");\r\n    setGallery([newArt, ...gallery]);\r\n    setGalleryFromDB([newArt, ...galleryFromDB]);\r\n  };\r\n  const updateArt = (art) => {\r\n    const newGallery = gallery.map((x) => {\r\n      return x._id === art._id ? art : x;\r\n    });\r\n    setGallery(newGallery);\r\n    setGalleryFromDB(newGallery);\r\n  };\r\n  const removeArt = (artDeleted) => {\r\n    setGallery(gallery.filter((art) => art._id === artDeleted._id));\r\n  };\r\n  const searchArt = (event) => {\r\n    event.preventDefault();\r\n    setSearchKeyword(event.target.value);\r\n    if (event.target.value.length > 0) {\r\n      setGallery(\r\n        galleryFromDB.filter((art) => {\r\n          return art.caption\r\n            .toLowerCase()\r\n            .includes(event.target.value.toLowerCase());\r\n        })\r\n      );\r\n    } else {\r\n      setGallery(galleryFromDB);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"py-2 d-flex justify-content-between\">\r\n        <form className=\"flex-grow-1\">\r\n          <input\r\n            className=\"form-control rounded-pill py-0\"\r\n            autoFocus\r\n            type=\"search\"\r\n            value={searchKeyword}\r\n            onChange={searchArt}\r\n            placeholder=\"Search Art\"\r\n          />\r\n        </form>\r\n        <AddUpdateArt addNewArt={addNewArt} />\r\n      </div>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-borderless table-sm \">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Title</th>\r\n              <th scope=\"col\" className=\"text-right d-none d-md-block\">\r\n                H x W\r\n              </th>\r\n              <th scope=\"col\">Update</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {gallery.map((art, index) => (\r\n              <tr key={art._id}>\r\n                <th scope=\"row\">{index + 1}</th>\r\n                <td>{art.caption}</td>\r\n                <td className=\"text-right d-none d-md-block\">\r\n                  {art.thumbnailHeight} x {art.thumbnailWidth}\r\n                </td>\r\n                <td>\r\n                  <AddUpdateArt\r\n                    art={art}\r\n                    updateArt={updateArt}\r\n                    removeArt={removeArt}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <nav class=\"navbar fixed-bottom navbar-light bg-light\">\r\n          <button type=\"button\" className=\"btn btn-danger btn-sm btn-block rounded-pill\" onClick={()=>{\r\n            localStorage.removeItem(\"token\");\r\n            props.setIsLoggedIn(false);\r\n          }}>\r\n            Logout\r\n          </button>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport SignIn from \"./SignIn\";\r\nimport AdminPanel from \"./AdminPanel\";\r\nimport { api_refresh_token } from \"../../Services\";\r\n\r\nexport default function Admin(props) {\r\n  const { isLoggedIn, setIsLoggedIn } = props;\r\n\r\n  useEffect(() => {\r\n    checkTokenStatus();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n\r\n\r\n  const checkTokenStatus = async () => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      const response = await api_refresh_token(localStorage.getItem(\"token\"));\r\n      switch (response.status) {\r\n        case 200:\r\n          // OK\r\n          const newToken = await response.json();\r\n          localStorage.setItem(\"token\", newToken.token);\r\n          setIsLoggedIn(true);\r\n          break;\r\n        case 401:\r\n          // unauthorized\r\n          localStorage.removeItem(\"token\");\r\n          alert(\"Unauthorized or token expired\");\r\n          break;\r\n        default:\r\n          console.log(\"Some error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <AdminPanel setIsLoggedIn={setIsLoggedIn}/>\r\n      ) : (\r\n        <SignIn setIsLoggedIn={setIsLoggedIn} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Button, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const nextPath = (path) => {\r\n    props.history.push(path);\r\n  };\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        {/* <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n        >\r\n          <MenuIcon />\r\n        </IconButton> */}\r\n        <Typography\r\n          variant=\"h6\"\r\n          className={classes.title}\r\n          onClick={() => nextPath(\"/\")}\r\n        >\r\n          Nabeela's Art\r\n        </Typography>\r\n\r\n        <Button color=\"inherit\" onClick={() => nextPath(\"/admin\")}>\r\n          Admin\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default withRouter(Header);\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home/Home\";\r\nimport Admin from \"./Admin/Admin\";\r\nimport Header from \"./Header\";\r\n\r\nexport default function Main() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  return (\r\n    <div>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Header/>\r\n        <Switch>\r\n          <Route path=\"/admin\">\r\n            <Admin isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Main from './Components/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}