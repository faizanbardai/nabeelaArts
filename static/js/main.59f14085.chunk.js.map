{"version":3,"sources":["serviceWorker.js","Components/Home/Artist.jsx","Components/Home/GallerySection.jsx","Components/Home/Home.jsx","Services/index.js","Components/Admin/SignIn.jsx","Components/Admin/Admin.jsx","Components/Main.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Artist","IMAGES","src","thumbnail","thumbnailWidth","thumbnailHeight","caption","tags","value","title","GallerySection","images","Home","api_login","body","a","fetch","baseURL","method","headers","JSON","stringify","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","props","classes","useState","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","username","response","status","json","token","localStorage","setItem","removeItem","console","log","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","onSubmit","TextField","required","fullWidth","id","label","name","onChange","target","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Button","Box","mt","Admin","Main","basename","process","path","exact","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.59f14085.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\n\r\nexport default function Artist() {\r\n    return (\r\n        <div>\r\n            Artist\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Gallery from 'react-grid-gallery';\r\n\r\nconst IMAGES =\r\n[{\r\n        src: \"https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_b.jpg\",\r\n        thumbnail: \"https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_n.jpg\",\r\n        thumbnailWidth: 320,\r\n        thumbnailHeight: 174,\r\n        caption: \"After Rain (Jeshu John - designerspics.com)\"\r\n},\r\n{\r\n        src: \"https://c2.staticflickr.com/9/8356/28897120681_3b2c0f43e0_b.jpg\",\r\n        thumbnail: \"https://c2.staticflickr.com/9/8356/28897120681_3b2c0f43e0_n.jpg\",\r\n        thumbnailWidth: 320,\r\n        thumbnailHeight: 212,\r\n        tags: [{value: \"Ocean\", title: \"Ocean\"}, {value: \"People\", title: \"People\"}],\r\n        caption: \"Boats (Jeshu John - designerspics.com)\"\r\n},\r\n\r\n{\r\n        src: \"https://c4.staticflickr.com/9/8887/28897124891_98c4fdd82b_b.jpg\",\r\n        thumbnail: \"https://c4.staticflickr.com/9/8887/28897124891_98c4fdd82b_n.jpg\",\r\n        thumbnailWidth: 320,\r\n        thumbnailHeight: 212\r\n}]\r\n\r\nexport default function GallerySection() {\r\n    return (\r\n        <div>\r\n            <Gallery images={IMAGES}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Artist from './Artist'\r\nimport GallerySection from './GallerySection'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <Artist />\r\n            <GallerySection />\r\n        </div>\r\n    )\r\n}\r\n","const baseURL = process.env.REACT_APP_BASE_URL;\r\nexport const api_login = async (body) => {\r\n    return await fetch(baseURL + \"/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n  };","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\n// import Grid from '@material-ui/core/Grid';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useState } from \"react\";\r\nimport { api_login } from \"../../Services\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await api_login({ username: email, password });\r\n    switch (response.status) {\r\n      case 200:\r\n        // OK\r\n        const token = await response.json();\r\n        localStorage.setItem(\"token\", token.token);\r\n        // props.setAuthorized();\r\n        break;\r\n      case 401:\r\n        // unauthorized\r\n        localStorage.removeItem(\"token\");\r\n        break;\r\n      default:\r\n        console.log(\"Some error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SignIn from \"./SignIn\";\r\n\r\nexport default function Admin() {\r\n  return (\r\n    <div>\r\n      <SignIn />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home/Home\";\r\nimport Admin from \"./Admin/Admin\";\r\n\r\nexport default function Main() {\r\n  return (\r\n    <div>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/admin\">\r\n            <Admin />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Main from './Components/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}